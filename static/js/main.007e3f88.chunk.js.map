{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robots","map","user","i","Searchbox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAaeA,MAbf,SAAcC,GACZ,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,YAA8CC,IAAI,UAC1D,gCACE,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCWHC,MAff,YAA8B,IAAVC,EAAS,EAATA,OAClB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACG,cAAC,EAAD,CAAcR,GAAIK,EAAOG,GAAGR,GAAIE,KAAMG,EAAOG,GAAGN,KAAMC,MAAOE,EAAOG,GAAGL,OAA5DK,SCOTC,MAff,YAAmC,IAAfC,EAAc,EAAdA,aAClB,OAEE,qBAAKZ,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGHI,MAVf,SAAgBjB,GACd,OACE,qBAAKkB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACIrB,EAAMsB,YCqBCC,E,kDArBb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDwB,MAAQ,CACXC,UAAU,GAHI,E,8DAQAC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACN,0DAEFG,KAAK5B,MAAMsB,a,GAjBKQ,aC8CZC,E,kDAzCb,aAAc,IAAD,8BACX,gBAcJC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAdxC,EAAKZ,MAAQ,CACXhB,OAAQ,GACR0B,YAAa,IAJJ,E,gEASK,IAAD,OACjBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAErB,OAAQiC,S,+BAQhC,IAAD,EAC0Bb,KAAKJ,MAA7BhB,EADF,EACEA,OAAQ0B,EADV,EACUA,YACVQ,EAAiBd,KAAKJ,MAAMhB,OAAOmC,QAAO,SAAAC,GAC9C,OAAQA,EAAMvC,KAAKwC,cAAcC,SAASZ,EAAYW,kBAExD,OAAQrC,EAAOuC,OAGb,sBAAK9C,UAAU,KAAf,UACE,oBAAIA,UAAU,eAAd,yBACA,cAAC,EAAD,CAAWY,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQkC,WAP1B,oBAAIzC,UAAU,eAAd,4B,GA3Bc6B,aCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCEdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.007e3f88.chunk.js","sourcesContent":["function Card(props){\n  return(\n    <div className=\"bg-light-green dib br3 pa1 ma2 grow bw2 shadow-5 tc\">\n      <img src={`https://robohash.org/${props.id}?200x200`} alt=\"robot\"></img>\n      <div>\n        <h2>{props.name}</h2>\n        <p>{props.email}</p>\n      </div>\n    </div>\n  );\n}\n\n\nexport default Card;\n","import Card from './Card';\n\nfunction CardList({ robots }){\n  return(\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n             <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\n           );\n        })\n      }\n    </div>\n  );\n}\n\n\nexport default CardList;\n","function Searchbox({searchChange}){\n  return(\n\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Search Robots\"\n        onChange={searchChange}\n       />\n    </div>\n  )\n}\n\n\nexport default Searchbox;\n","\nfunction Scroll(props){\n  return(\n    <div style={{overflowY: 'scroll', border: '2px solid black', height: '800px'}}>\n      { props.children}\n    </div>\n\n  )\n}\n\n\nexport default Scroll;\n","import { Component } from 'react';\n\n\nclass ErrorBoundry extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render(){\n    if (this.state.hasError)Â {\n      return <h1>Oooops. That is not good</h1>\n    }\n    return this.props.children\n  }\n}\n\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList'\nimport Searchbox from '../components/Searchbox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\n\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state = {\n      robots: [],\n      searchField: '',\n    }\n  }\n\n\ncomponentDidMount(){\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response=> response.json())\n    .then(users => this.setState({ robots: users }));\n}\n\nonSearchChange = (event) => {\n  this.setState({ searchField: event.target.value })\n}\n\n\n  render(){\n    const { robots, searchField } = this.state;\n    const filteredRobots = this.state.robots.filter(robot => {\n      return( robot.name.toLowerCase().includes(searchField.toLowerCase()));\n    })\n    return !robots.length ?\n    <h1 className=\"tc underline\">Loading...</h1> :\n    (\n      <div className=\"tc\">\n        <h1 className=\"f1 underline\">Robofriends</h1>\n        <Searchbox searchChange={this.onSearchChange}/>\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots}/>\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    )}\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\nimport './components/App.css'\n//import { robots } from './Robots';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}